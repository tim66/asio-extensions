language: cpp

addons:
  apt:
    sources: &sources
      # this is needed for gcc and clang
      - ubuntu-toolchain-r-test
    packages: &packages
      - cmake
      - cmake-data

matrix:
  include:
    - compiler: gcc
      os: linux
      env: TOOLSET=gcc BOOST_VERSION=default
      addons:
        apt:
          sources:
            - *sources
          packages:
            - g++-8
            - *packages

    - compiler: gcc
      os: linux
      env: TOOLSET=gcc BOOST_VERSION=default CMAKE_OPTIONS="-DASIOEXT_USE_BOOST_ASIO=ON"
      addons:
        apt:
          sources:
            - *sources
          packages:
            - g++-8
            - *packages

    - compiler: clang
      os: linux
      env: TOOLSET=clang BOOST_VERSION=default
      addons:
        apt:
          sources:
            - llvm-toolchain-xenial-8
            - *sources
          packages:
            - clang-8
            - *packages

    - compiler: clang
      os: linux
      env: TOOLSET=clang BOOST_VERSION=default CMAKE_OPTIONS="-DASIOEXT_USE_BOOST_ASIO=ON"
      addons:
        apt:
          sources:
            - llvm-toolchain-xenial-8
            - *sources
          packages:
            - clang-8
            - *packages

    - compiler: clang
      os: osx
      env: TOOLSET=clang BOOST_VERSION=default

install:
  # defaults
  - if [[ "${BOOST_VERSION}" == "default" ]]; then BOOST_VERSION=1.66.0; fi

  # g++8
  - if [[ "$TRAVIS_OS_NAME" == "linux" && "$TOOLSET" = "gcc" ]]; then export CXX="g++-8" CC="gcc-8"; fi
  # clang 8
  - if [[ "$TRAVIS_OS_NAME" == "linux" && "$TOOLSET" == "clang" ]]; then export CXX="clang++-8"; fi

  - DEPS_DIR="${HOME}/deps"
  - mkdir -p ${DEPS_DIR} && cd ${DEPS_DIR}

  ############################################################################
  # Install Boost headers
  ############################################################################
  - |
    if [[ "${BOOST_VERSION}" != "" ]]; then
      CXXFLAGS="-std=gnu++14"
      if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then CXXFLAGS+="-Wno-variadic-macros -Wno-c99-extensions"; fi
      echo "using $TOOLSET : : $CXX : <cxxflags>$CXXFLAGS ;" > ~/user-config.jam

      BOOST_DIR=${DEPS_DIR}/boost-${BOOST_VERSION}
      if [[ "${BOOST_VERSION}" == "trunk" ]]; then
        BOOST_URL="http://github.com/boostorg/boost.git"
        travis_retry git clone --depth 1 --recursive ${BOOST_URL} ${BOOST_DIR} || exit 1
        (cd ${BOOST_DIR} && ./bootstrap.sh && ./b2 headers) || exit 1
      else
        BOOST_URL="https://dl.bintray.com/boostorg/release/${BOOST_VERSION}/source/boost_${BOOST_VERSION//\./_}.tar.gz"
        mkdir -p ${BOOST_DIR}
        { travis_retry wget -O - ${BOOST_URL} | tar --strip-components=1 -xz -C ${BOOST_DIR}; } || exit 1
        (cd ${BOOST_DIR} && ./bootstrap.sh && ./b2 --with-filesystem --with-system --with-test variant=release toolset=$TOOLSET stage) || exit 1
      fi
      CMAKE_OPTIONS+=" -DBOOST_ROOT=${BOOST_DIR}"
    fi

before_script:
  - cd "${TRAVIS_BUILD_DIR}"
  - git clone --branch=master --depth=5 https://github.com/chriskohlhoff/asio.git
  - mkdir build
  - cd build
  - cmake -DASIOEXT_STANDALONE=OFF -DASIOEXT_ASIO_ROOT=../asio/asio .. ${CMAKE_OPTIONS}

script:
  - make
  - test/asioext.test
